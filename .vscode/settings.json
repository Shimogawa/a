{
    "editor.formatOnSave": true,
    "cmake.debugConfig": {
        "cwd": "${workspaceFolder}"
    },
    // "C_Cpp.default.configurationProvider": "ms-vscode.cmake-tools",
    // "C_Cpp.codeAnalysis.clangTidy.enabled": true,

    // Disable formatting and intellisense engine in Microsoft C/C++ extension (provides debugging)
    // This way you can have the other features of the extension but use clangd for LSP
    "C_Cpp.formatting": "Disabled",
    "C_Cpp.intelliSenseEngine": "Default",
    // Prefer "Ninja"
    "cmake.generator": "Ninja",
    "cmake.sourceDirectory": "${workspaceFolder}",
    "cmake.buildDirectory": "${workspaceFolder}/cmake-build-${variant:buildType}",
    // Copy compile_commands.json from the build folder to root folder, so that clangd can use it
    // NOTE: Alternatively, you can pass --compile-commands-dir=<string> in the "clangd.arguments" array above
    "cmake.copyCompileCommands": "${workspaceFolder}/compile_commands.json",
    "cmake.configureSettings": {
        "CMAKE_EXPORT_COMPILE_COMMANDS": 1,
    },
    "files.associations": {
        "*.hexdump": "hexdump",
        "LICENSE": "plaintext",
        "thread": "cpp",
        "atomic": "cpp",
        "bit": "cpp",
        "cctype": "cpp",
        "clocale": "cpp",
        "cmath": "cpp",
        "compare": "cpp",
        "concepts": "cpp",
        "cstddef": "cpp",
        "cstdint": "cpp",
        "cstdio": "cpp",
        "cstdlib": "cpp",
        "cstring": "cpp",
        "ctime": "cpp",
        "cwchar": "cpp",
        "exception": "cpp",
        "functional": "cpp",
        "initializer_list": "cpp",
        "ios": "cpp",
        "iosfwd": "cpp",
        "iostream": "cpp",
        "istream": "cpp",
        "iterator": "cpp",
        "limits": "cpp",
        "list": "cpp",
        "memory": "cpp",
        "new": "cpp",
        "ostream": "cpp",
        "ratio": "cpp",
        "stdexcept": "cpp",
        "stop_token": "cpp",
        "streambuf": "cpp",
        "string": "cpp",
        "system_error": "cpp",
        "tuple": "cpp",
        "type_traits": "cpp",
        "typeinfo": "cpp",
        "unordered_map": "cpp",
        "utility": "cpp",
        "vector": "cpp",
        "xfacet": "cpp",
        "xhash": "cpp",
        "xiosbase": "cpp",
        "xlocale": "cpp",
        "xlocinfo": "cpp",
        "xlocnum": "cpp",
        "xmemory": "cpp",
        "xstddef": "cpp",
        "xstring": "cpp",
        "xtr1common": "cpp",
        "xutility": "cpp",
        "mutex": "cpp",
        "algorithm": "cpp",
        "deque": "cpp",
        "queue": "cpp"
    }
}